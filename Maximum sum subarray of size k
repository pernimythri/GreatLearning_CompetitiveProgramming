Time Complexity : O(N*K)

import java.util.*;
public class solution{
    public static int maxSumSubarrayOfSizeK(int[] arr, int k) {
        if (arr == null || arr.length == 0 || k <= 0 || k > arr.length) {
            throw new IllegalArgumentException("Invalid input.");
        }
        int maxSum = Integer.MIN_VALUE;
        for (int i = 0; i <= arr.length - k; i++) {
            int currentSum = 0;
           
            for (int j = i; j < i + k; j++) {
                currentSum += arr[j];
            }
            maxSum = Math.max(maxSum, currentSum);
        }

        return maxSum;
    }

  
    public static void main(String[] args) {
        solution obj=new solution();
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter size of array : ");
        int n=sc.nextInt();
        int[] arr=new int[n];
        System.out.print("Enter elements to array : ");
        for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
        }
        System.out.print("Enter subarray size : ");
        int k=sc.nextInt();
        System.out.println("Maximum sum subarray is : " + obj.maxSumSubarrayOfSizeK(arr,k));
    }}


---------------------------------------------------------------------------------------------------------------------------------------------------------------
Time Complexity : O(N)

import java.util.*;
public class solution{
    public static int maxSumSubarrayOfSizeK(int[] arr, int k) {
        if (arr.length < k) {
           return 0;
        }
        int maxSum = 0;
        for (int i = 0; i < k; i++) {
            maxSum += arr[i];
        }
        int windowSum = maxSum;
        for (int i = k; i < arr.length; i++) {
            windowSum += arr[i] - arr[i - k];
            maxSum = Math.max(maxSum, windowSum);
        }
        return maxSum;
    }
    public static void main(String[] args) {
        solution obj=new solution();
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter size of array : ");
        int n=sc.nextInt();
        int[] arr=new int[n];
        System.out.print("Enter elements to array : ");
        for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
        }
        System.out.print("Enter subarray size : ");
        int k=sc.nextInt();
        System.out.println("Maximum sum subarray is : " + obj.maxSumSubarrayOfSizeK(arr,k));
    }}

---------------------------------------------------------------------------------------------------------------------------------

